**** ABANS DE L'EXAMEN POSAR AQUEST FITXER A DADES ****


d(t) = A*sin(w*t+fase) 
    A = amplitud
    w = 2*PI*frequencia
    t = uniform float time
    fase(inicial) = o ens la donen o no n'hi ha. Un int 
  
  vertexAux.x += dist * normal.x;
  vertexAux.y += dist * normal.y;
  vertexAux.z += dist * normal.z;
  multiplicar (dist * normal) component a component fara que s'expandexi i es contragui en comptes d'aplicar translació
  
  
frame = int(time/slice) % 4; Per augmentar els fps, fem que el terme a l'esquerre del % sigui mes gran. +gran == +rapid el canvi

gl_FragCoord: (in vec4 gl_FragCoord)
Available only in the fragment language, gl_FragCoord is an input variable that contains the window relative coordinate (x, y, z, 1/w)

gl_Position — contains the position of the current vertex
---------------------------------------------------------------------------------------------------------------------------------------
distance(boundingBoxMin, boundingBoxMax);	
    distance es una funcio predefinida, i en aquest cas fa el calcul de la diagonal de la capsa contenidora, ojo perque jo ho
             havia fet amb x,y. I estem en 3D, soc retra.
    


